# This workflow sets up Snyk scans

name: Snyk Scan

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule: # Run snyk scan daily at midnight
    - cron: '0 0 * * *'

permissions:
  contents: read

jobs:
  snyk-python:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 # Check out the repository to the workflow runner

      - name: Set up Python 3.12
        uses: actions/setup-python@v4 # Use setup-python to configure Python 3.12
        with:
          python-version: '3.12'

      - name: Install Snyk CLI
        run: pip install snyk # Install Snyk CLI for vulnerability scanning

      - name: Snyk Python report vulnerabilities
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }} # Snyk authentication token from GitHub secrets
        run: snyk test --sarif-file-output=snyk.sarif --policy-path=.snyk --severity-threshold=high # Forces fail on high-severity vulnerabilities

      # Push the Snyk Code results into GitHub Code Scanning tab
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure() # Upload results to GitHub even if the scan fails
        with:
          sarif_file: snyk.sarif
